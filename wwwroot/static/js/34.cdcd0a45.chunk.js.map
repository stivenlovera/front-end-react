{"version":3,"sources":["page-sections/authentication/ContentSlider.jsx","page-sections/authentication/AuthenticationLayout.jsx","Services/api-ventas-erp/authenticate.js","pages/login/login.jsx","pages/login/hooks/useLogin.jsx","components/input-fields/AppTextField.jsx"],"names":["StyledProvider","styled","CarouselProvider","theme","outline","padding","height","display","overflow","position","alignItems","flexDirection","justifyContent","backgroundColor","lightTheme","palette","grey","background","paper","StyledDotGroup","DotGroup","gap","textAlign","border","width","borderRadius","transition","primary","main","ContentSlider","isPlaying","totalSlides","naturalSlideWidth","naturalSlideHeight","currentSlide","isIntrinsicHeight","dragEnabled","index","SlideComponent","img","title","descripiton","Box","sx","alt","src","style","maxWidth","fontWeight","mt","AuthenticationLayout","props","children","route","routeName","description","downMd","useMediaQuery","breakpoints","down","Grid","container","item","md","xs","order","Stack","fontSize","color","to","LoginService","usuario","password","axios","post","process","AxiosRequest","initialState","ButtonBase","marginBottom","divider","Login","validationSchema","Yup","shape","required","useFormik","initialValues","onSubmit","values","ApiLogin","errors","handleChange","handleSubmit","touched","setFieldValue","setValues","resetForm","enqueueSnackbar","useSnackbar","navigate","useNavigate","dispatch","useDispatch","data","status","console","log","token","setToken","message","variant","UseLogin","AppTextField","fullWidth","label","name","value","onChange","error","Boolean","helperText","Button","type","StyledTextField","TextField","text","borderColor","action","disabled","hover"],"mappings":"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","file":"static/js/34.cdcd0a45.chunk.js","sourcesContent":["import { styled } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { H1, Paragraph } from \"components/Typography\";\r\nimport { CarouselProvider, DotGroup, Slide, Slider } from \"pure-react-carousel\";\r\nimport React from \"react\";\r\nimport { lightTheme } from \"../../constants\";\r\nconst StyledProvider = styled(CarouselProvider)(({\r\n  theme\r\n}) => ({\r\n  outline: 0,\r\n  padding: 24,\r\n  height: \"100%\",\r\n  display: \"flex\",\r\n  overflow: \"hidden\",\r\n  position: \"relative\",\r\n  alignItems: \"center\",\r\n  flexDirection: \"column\",\r\n  justifyContent: \"center\",\r\n  backgroundColor: lightTheme(theme) ? theme.palette.grey[300] : theme.palette.background.paper,\r\n  \"& .focusRing___1airF.carousel__slide-focus-ring\": {\r\n    outline: \"none !important\"\r\n  }\r\n}));\r\nconst StyledDotGroup = styled(DotGroup)(({\r\n  theme\r\n}) => ({\r\n  gap: 5,\r\n  display: \"flex\",\r\n  textAlign: \"center\",\r\n  \"& .dot___3c3SI.carousel__dot\": {\r\n    border: 0,\r\n    width: 10,\r\n    height: 10,\r\n    borderRadius: \"50%\",\r\n    transition: \"all 0.3s\",\r\n    backgroundColor: theme.palette.grey[600]\r\n  },\r\n  \"& .dot___3c3SI.carousel__dot--selected\": {\r\n    backgroundColor: theme.palette.primary.main\r\n  }\r\n}));\r\n\r\nconst ContentSlider = () => {\r\n  return <StyledProvider isPlaying totalSlides={3} naturalSlideWidth={100} naturalSlideHeight={125} currentSlide={1} isIntrinsicHeight dragEnabled={false}>\r\n      <Slider>\r\n        <Slide index={0}>\r\n          <SlideComponent img=\"/static/illustration/login-2.svg\" title=\"Graph and analytics\" descripiton=\"View your big dataset on graph and chart.\" />\r\n        </Slide>\r\n        <Slide index={1}>\r\n          <SlideComponent img=\"/static/illustration/login-1.svg\" title=\"Task management\" descripiton=\"Task management UI.\" />\r\n        </Slide>\r\n        <Slide index={2}>\r\n          <SlideComponent img=\"/static/illustration/login-3.svg\" title=\"Build your project fast\" descripiton=\"All the components you need is here.\" />\r\n        </Slide>\r\n      </Slider>\r\n\r\n      <StyledDotGroup />\r\n    </StyledProvider>;\r\n};\r\n\r\nexport default ContentSlider;\r\n\r\nfunction SlideComponent({\r\n  img,\r\n  title,\r\n  descripiton\r\n}) {\r\n  return <Box sx={{\r\n    padding: 4,\r\n    textAlign: \"center\"\r\n  }}>\r\n      <img alt=\"slide\" src={img} style={{\r\n      maxWidth: 300\r\n    }} />\r\n      <H1 fontWeight={700} mt={3}>\r\n        {title}\r\n      </H1>\r\n      <Paragraph>{descripiton}</Paragraph>\r\n    </Box>;\r\n}","import { Grid, Stack } from \"@mui/material\";\r\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\r\nimport { Box } from \"@mui/system\";\r\nimport { H1, Paragraph } from \"components/Typography\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ContentSlider from \"./ContentSlider\"; // -------------------------------------------------------\r\n\r\n// -------------------------------------------------------\r\nconst AuthenticationLayout = props => {\r\n  const {\r\n    children,\r\n    title,\r\n    route,\r\n    routeName,\r\n    description\r\n  } = props;\r\n  const downMd = useMediaQuery(theme => theme.breakpoints.down(\"md\"));\r\n  return <Grid container height=\"100%\">\r\n      <Grid item md={6} xs={12} order={downMd ? 2 : 1}>\r\n        <ContentSlider />\r\n      </Grid>\r\n\r\n      <Grid item md={6} xs={12} order={downMd ? 1 : 2}>\r\n        <Stack alignItems=\"center\" justifyContent=\"center\" height=\"100%\">\r\n          <Box textAlign=\"center\" maxWidth={550} width=\"100%\" padding={4}>\r\n            <img src=\"/static/logo/logo.svg\" width={40} alt=\"Logo\" />\r\n            <H1 fontWeight={700} fontSize={24} mt={2}>\r\n              {title}\r\n            </H1>\r\n            <Paragraph color=\"text.disabled\" fontWeight={500}>\r\n              {description} <Link to={route}>{routeName}</Link>\r\n            </Paragraph>\r\n\r\n            {children}\r\n          </Box>\r\n        </Stack>\r\n      </Grid>\r\n    </Grid>;\r\n};\r\n\r\nexport default AuthenticationLayout;","import axios from \"axios\";\r\nimport { AxiosRequest } from \"utils/axios\";\r\nAxiosRequest()\r\nexport async function LoginService(usuario, password) {\r\n    return await axios.post(`${process.env.REACT_APP_API}api/Autenticacion/Login`, { usuario, password });\r\n}\r\nexport async function Authenticate() {\r\n    return await axios.get(`${process.env.REACT_APP_API}api/Autenticacion/ObtenerDatosUsuario`);\r\n}","\r\nimport { Button, ButtonBase, Divider, Stack, styled } from \"@mui/material\";\r\nimport AppTextField from \"components/input-fields/AppTextField\";\r\nimport { useFormik } from \"formik\";\r\nimport AuthenticationLayout from \"page-sections/authentication/AuthenticationLayout\";\r\nimport React from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { UseLogin } from \"./hooks/useLogin\";\r\nconst initialState = {\r\n    usuario: '',\r\n    password: ''\r\n}\r\nconst StyledButton = styled(ButtonBase)(({\r\n    theme\r\n}) => ({\r\n    width: \"100%\",\r\n    padding: 12,\r\n    marginBottom: 16,\r\n    borderRadius: \"8px\",\r\n    fontWeight: \"500\",\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    [theme.breakpoints.down(454)]: {\r\n        width: \"100%\",\r\n        marginBottom: 8\r\n    }\r\n}));\r\n\r\nconst Login = () => {\r\n    const validationSchema = Yup.object().shape({\r\n        usuario: Yup.string().required(\"Usuario requerido\"),\r\n        password: Yup.string().required(\"Password es requerido\"),\r\n    });\r\n    const {\r\n        values,\r\n        errors,\r\n        handleChange,\r\n        handleSubmit,\r\n        touched,\r\n        setFieldValue,\r\n        setValues,\r\n        resetForm,\r\n    } = useFormik({\r\n        initialValues: initialState,\r\n        validationSchema,\r\n        onSubmit: async (values) => {\r\n            await ApiLogin();\r\n        }\r\n    });\r\n    const { ApiLogin } = UseLogin(values.usuario, values.password)\r\n    return (\r\n        <AuthenticationLayout route=\"/register\" description=\"que es esto?\" title=\"A plus security\" routeName=\"registrate!\">\r\n            <form onSubmit={handleSubmit}>\r\n                <Stack gap={2} mt={5}>\r\n                    <AppTextField\r\n                        fullWidth\r\n                        label=\"Usuario\"\r\n                        name='usuario'\r\n                        value={values.usuario}\r\n                        onChange={handleChange}\r\n                        error={Boolean(touched.usuario && errors.usuario)}\r\n                        helperText={touched.usuario && errors.usuario}\r\n                    />\r\n                    <AppTextField\r\n                        fullWidth\r\n                        label=\"Password\"\r\n                        name='password'\r\n                        value={values.password}\r\n                        onChange={handleChange}\r\n                        error={Boolean(touched.password && errors.password)}\r\n                        helperText={touched.password && errors.password}\r\n                    />\r\n                    <Button variant=\"contained\" type=\"submit\">Iniciar session</Button>\r\n                </Stack>\r\n            </form>\r\n        </AuthenticationLayout>\r\n    );\r\n};\r\n\r\nexport default Login;","import { LoginService } from \"Services/api-ventas-erp/authenticate\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { setToken } from \"reducers/Slice\";\r\n\r\nexport const UseLogin = (usuario, password) => {\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const updateToken = (token) => {\r\n        dispatch(\r\n            setToken({\r\n                token: token\r\n            })\r\n        )\r\n    }\r\n    const ApiLogin = async () => {\r\n        try {\r\n            const { data } = await LoginService(usuario, password);\r\n            if (data.status == 1) {\r\n                console.log(data)\r\n                updateToken(data.data.token)\r\n                navigate('/dashboard')\r\n                enqueueSnackbar(data.message, { variant: 'success' });\r\n            }\r\n            else {\r\n\r\n                enqueueSnackbar(data.message, { variant: 'error' });\r\n            }\r\n        } catch (error) {\r\n\r\n            enqueueSnackbar('Servidor desconectado', { variant: 'error' });\r\n        }\r\n    }\r\n    return {\r\n        ApiLogin,\r\n    }\r\n}","import { styled, TextField } from \"@mui/material\";\r\nimport React from \"react\";\r\nconst StyledTextField = styled(TextField)(({\r\n  theme\r\n}) => ({\r\n  \"& .MuiOutlinedInput-input\": {\r\n    fontWeight: 500,\r\n    color: theme.palette.text.primary\r\n  },\r\n  \"& .MuiOutlinedInput-notchedOutline\": {\r\n    borderRadius: \"8px\",\r\n    borderColor: theme.palette.action.disabled\r\n  },\r\n  \"& .MuiOutlinedInput-root.Mui-disabled .MuiOutlinedInput-notchedOutline\": {\r\n    borderColor: theme.palette.action.hover\r\n  },\r\n  \"& .MuiInputLabel-root\": {\r\n    fontWeight: 500,\r\n    color: theme.palette.text.disabled\r\n  },\r\n  \"& .MuiInputLabel-root.Mui-focused\": {\r\n    fontWeight: 600\r\n  },\r\n  \"& .MuiSvgIcon-root\": {\r\n    color: theme.palette.text.disabled\r\n  }\r\n}));\r\n\r\nconst AppTextField = props => {\r\n  return <StyledTextField {...props} />;\r\n};\r\n\r\nexport default AppTextField;"],"sourceRoot":""}