{"version":3,"sources":["components/AppModal.jsx","components/input-fields/AppTextField.jsx","components/IconWrapper.jsx","components/flexbox/FlexRowAlign.jsx","icons/Edit.jsx","pages/almacenes/hooks/useAlmacenes.jsx","pages/almacenes/utils/almacen.js","pages/almacenes/almacenes-list/almacenes-list.jsx","pages/almacenes/almacenes-list/components/modal-almacen/modal-almacen.jsx","../node_modules/@mui/icons-material/esm/Add.js"],"names":["Wrapper","styled","Box","theme","top","left","padding","maxWidth","width","borderRadius","position","transform","backgroundColor","lightTheme","palette","background","default","AppModal","children","open","handleClose","props","onClose","StyledTextField","TextField","fontWeight","color","text","primary","borderColor","action","disabled","hover","AppTextField","height","display","alignItems","marginRight","justifyContent","light","IconWrapper","FlexRowAlign","Edit","viewBox","d","UseAlmacen","onList","Request","endPoint","process","initialValues","method","showError","showSuccess","data","message","status","lista","onCreate","create","onStore","values","store","onEditar","id","edit","onUpdate","update","onDelete","delete","onAlmacenProducto","idAlmacen","almacen","onProductoAlmacen","productos","onMovimientoAlmacen","useAutocompleteAlmacenes","useState","listaAlmacenes","setlistaAlmacenes","openAutoCompleteAlmacenes","setOpenAutoCompleteAlmacenes","loadingAutoCompleteAlmacenes","setLoadingAutoCompleteAlmacenes","LoadListaAlmacenes","console","log","refresListaAlmacenes","isOptionEqualToValueAlmacenes","option","value","nombreAlmacen","getOptionLabelAlmacenes","initialAlmacen","codigoAlmacen","dirrecion","initialProductoAlmacen","productomaestroid","productoid","nombre","codigoProducto","nombreProducto","categoriaid","nombrecategoria","initialDetalleAlmacen","detallealmacenid","serie","fecharegistro","estadoVendido","initialStateStockProducto","almacenid","HeadingWrapper","minWidth","outline","right","error","main","minHeight","cursor","grey","FlexBox","marginBottom","flexWrap","breakpoints","down","AlmacenesList","t","useTranslation","setOpenModalAlmacen","setOpenModalDelete","btnCreate","setAlmacen","setEditar","columnName","wordWrapEnabled","align","tableColumnExtensions","name","title","columns","rows","setRow","currencyColumns","CurrencyFormatter","row","to","IconButton","sx","fontSize","onClick","handlerEditar","handlerDelete","CurrencyTypeProvider","formatterComponent","inizializando","handlerCreate","useEffect","pt","pb","gap","Button","variant","endIcon","Add","Paper","for","defaultSorting","direction","defaultCurrentPage","pageSize","defaultValue","columnExtensions","showSortingControls","createSvgIcon","_jsx"],"mappings":"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","file":"static/js/28.c987d52d.chunk.js","sourcesContent":["import { Box, Modal, styled } from \"@mui/material\";\r\nimport { lightTheme } from \"../constants\"; // ---------------------------------------------------------\r\n\r\n// ---------------------------------------------------------\r\nconst Wrapper = styled(Box)(({\r\n  theme\r\n}) => ({\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  padding: 24,\r\n  maxWidth: 680,\r\n  width: \"100%\",\r\n  borderRadius: \"4px\",\r\n  position: \"absolute\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  backgroundColor: lightTheme(theme) ? \"#fff\" : theme.palette.background.default\r\n}));\r\n\r\nconst AppModal = ({\r\n  children,\r\n  open,\r\n  handleClose,\r\n  ...props\r\n}) => {\r\n  return <Modal open={open} onClose={handleClose}>\r\n      <Wrapper {...props}>{children}</Wrapper>\r\n    </Modal>;\r\n};\r\n\r\nexport default AppModal;","import { styled, TextField } from \"@mui/material\";\r\nimport React from \"react\";\r\nconst StyledTextField = styled(TextField)(({\r\n  theme\r\n}) => ({\r\n  \"& .MuiOutlinedInput-input\": {\r\n    fontWeight: 500,\r\n    color: theme.palette.text.primary\r\n  },\r\n  \"& .MuiOutlinedInput-notchedOutline\": {\r\n    borderRadius: \"8px\",\r\n    borderColor: theme.palette.action.disabled\r\n  },\r\n  \"& .MuiOutlinedInput-root.Mui-disabled .MuiOutlinedInput-notchedOutline\": {\r\n    borderColor: theme.palette.action.hover\r\n  },\r\n  \"& .MuiInputLabel-root\": {\r\n    fontWeight: 500,\r\n    color: theme.palette.text.disabled\r\n  },\r\n  \"& .MuiInputLabel-root.Mui-focused\": {\r\n    fontWeight: 600\r\n  },\r\n  \"& .MuiSvgIcon-root\": {\r\n    color: theme.palette.text.disabled\r\n  }\r\n}));\r\n\r\nconst AppTextField = props => {\r\n  return <StyledTextField {...props} />;\r\n};\r\n\r\nexport default AppTextField;","import { Box, styled } from \"@mui/material\";\r\nimport React from \"react\";\r\nconst Wrapper = styled(Box)(({\r\n  theme\r\n}) => ({\r\n  width: 40,\r\n  height: 40,\r\n  display: \"flex\",\r\n  borderRadius: \"5px\",\r\n  alignItems: \"center\",\r\n  marginRight: \"0.5rem\",\r\n  justifyContent: \"center\",\r\n  backgroundColor: theme.palette.primary.light\r\n}));\r\n\r\nconst IconWrapper = ({\r\n  children,\r\n  ...props\r\n}) => {\r\n  return <Wrapper {...props}>{children}</Wrapper>;\r\n};\r\n\r\nexport default IconWrapper;","import { Box } from \"@mui/material\";\r\n\r\nconst FlexRowAlign = ({\r\n  children,\r\n  ...props\r\n}) => <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" {...props}>\r\n    {children}\r\n  </Box>;\r\n\r\nexport default FlexRowAlign;","import { SvgIcon } from \"@mui/material\";\r\n\r\nconst Edit = props => {\r\n  return <SvgIcon viewBox=\"0 0 24 24\" {...props}>\r\n      <path d=\"M16.81,10a.5.5,0,0,1,0,.7L8.75,18.79a2,2,0,0,1-.68.45L3.73,21a.5.5,0,0,1-.54-.11l0,0A.5.5,0,0,1,3,20.27l1.72-4.34a2,2,0,0,1,.45-.68l8.07-8.07a.5.5,0,0,1,.71,0ZM20.56,4.1l-.66-.66A1.5,1.5,0,0,0,18.84,3h-.76A1.5,1.5,0,0,0,17,3.44L15.19,5.27a.5.5,0,0,0,0,.7L18,8.82a.5.5,0,0,0,.71,0L20.56,7A1.5,1.5,0,0,0,21,5.92V5.16A1.5,1.5,0,0,0,20.56,4.1Z\" />\r\n    </SvgIcon>;\r\n};\r\n\r\nexport default Edit;","import { useState } from \"react\";\r\nimport { Request } from \"utils/http\";\r\n\r\nexport const UseAlmacen = () => {\r\n  const onList = async () => {\r\n    const { data, message, status } = await Request({\r\n      endPoint: `${process.env.REACT_APP_API}api/almacen`,\r\n      initialValues: [],\r\n      method: 'get',\r\n      showError: true,\r\n      showSuccess: false\r\n    });\r\n    return {\r\n      lista: data,\r\n      status: !!status\r\n    };\r\n  }\r\n  const onCreate = async () => {\r\n    const { data, message, status } = await Request({\r\n      endPoint: `${process.env.REACT_APP_API}api/almacen/create`,\r\n      initialValues: [],\r\n      method: 'get',\r\n      showError: true,\r\n      showSuccess: false\r\n    });\r\n    return {\r\n      create: data,\r\n      status: !!status\r\n    };\r\n  }\r\n  const onStore = async (values) => {\r\n    const { data, message, status } = await Request({\r\n      endPoint: `${process.env.REACT_APP_API}api/almacen`,\r\n      initialValues: [],\r\n      method: 'post',\r\n      showError: true,\r\n      showSuccess: true,\r\n      values: values\r\n    });\r\n    return {\r\n      store: data,\r\n      status: !!status\r\n    };\r\n  }\r\n  const onEditar = async (id) => {\r\n    const { data, message, status } = await Request({\r\n      endPoint: `${process.env.REACT_APP_API}api/almacen/${id}`,\r\n      initialValues: [],\r\n      method: 'get',\r\n      showError: true,\r\n      showSuccess: false\r\n    });\r\n    return {\r\n      edit: data,\r\n      status: !!status\r\n    };\r\n  }\r\n  const onUpdate = async (values) => {\r\n    const { data, message, status } = await Request({\r\n      endPoint: `${process.env.REACT_APP_API}api/almacen/${values.id}`,\r\n      initialValues: [],\r\n      method: 'put',\r\n      showError: true,\r\n      showSuccess: true,\r\n      values: values\r\n    });\r\n    return {\r\n      update: data,\r\n      status: !!status\r\n    };\r\n  }\r\n  const onDelete = async (id) => {\r\n    const { data, message, status } = await Request({\r\n      endPoint: `${process.env.REACT_APP_API}api/almacen/${id}`,\r\n      initialValues: [],\r\n      method: 'delete',\r\n      showError: true,\r\n      showSuccess: true\r\n    });\r\n    return {\r\n      delete: data,\r\n      status: !!status\r\n    };\r\n  }\r\n  const onAlmacenProducto = async (idAlmacen) => {\r\n    const { data, message, status } = await Request({\r\n      endPoint: `${process.env.REACT_APP_API}api/almacen/obtenerProductos/${idAlmacen}`,\r\n      initialValues: [],\r\n      method: 'get',\r\n      showError: true,\r\n      showSuccess: false\r\n    });\r\n    return {\r\n      almacen: data,\r\n      status: !!status\r\n    };\r\n  }\r\n  const onProductoAlmacen = async (id) => {\r\n    const { data, message, status } = await Request({\r\n      endPoint: `${process.env.REACT_APP_API}api/almacen/obtenerListadoProductosAlmacen`,\r\n      initialValues: [],\r\n      method: 'get',\r\n      showError: true,\r\n      showSuccess: false\r\n    });\r\n    return {\r\n      productos: data,\r\n      status: !!status\r\n    };\r\n  }\r\n  const onMovimientoAlmacen = async (values) => {\r\n    const { data, message, status } = await Request({\r\n      endPoint: `${process.env.REACT_APP_API}api/almacen/movimientoAlmacen`,\r\n      initialValues: [],\r\n      method: 'post',\r\n      showError: true,\r\n      showSuccess: false,\r\n      values: values\r\n    });\r\n    return {\r\n      data: data,\r\n      status: !!status\r\n    };\r\n  }\r\n  return {\r\n    onList,\r\n    onCreate,\r\n    onStore,\r\n    onEditar,\r\n    onUpdate,\r\n    onDelete,\r\n    onProductoAlmacen,\r\n    onAlmacenProducto,\r\n    onMovimientoAlmacen\r\n  }\r\n}\r\n\r\nexport const useAutocompleteAlmacenes = () => {\r\n  //Almacenes\r\n  const [listaAlmacenes, setlistaAlmacenes] = useState([]);\r\n  const [openAutoCompleteAlmacenes, setOpenAutoCompleteAlmacenes] = useState(false)\r\n  const [loadingAutoCompleteAlmacenes, setLoadingAutoCompleteAlmacenes] = useState(false)\r\n  const { onList } = UseAlmacen()\r\n  const LoadListaAlmacenes = async () => {\r\n    setLoadingAutoCompleteAlmacenes(true)\r\n    const { lista, status } = await onList()\r\n    if (status) {\r\n      console.log('Todos los almacenes',lista)\r\n      setlistaAlmacenes(lista)\r\n      setOpenAutoCompleteAlmacenes(true)\r\n    }\r\n    setLoadingAutoCompleteAlmacenes(false)\r\n  }\r\n  const refresListaAlmacenes = () => {\r\n    setOpenAutoCompleteAlmacenes(false)\r\n    setlistaAlmacenes([])\r\n  }\r\n  const isOptionEqualToValueAlmacenes = (option, value) => option.nombreAlmacen === value.nombreAlmacen\r\n  const getOptionLabelAlmacenes = (option) => option.nombreAlmacen\r\n\r\n  return {\r\n    listaAlmacenes,\r\n    openAutoCompleteAlmacenes,\r\n    loadingAutoCompleteAlmacenes,\r\n    refresListaAlmacenes,\r\n    isOptionEqualToValueAlmacenes,\r\n    getOptionLabelAlmacenes,\r\n    LoadListaAlmacenes\r\n  }\r\n}","export const initialAlmacen = {\r\n    id: 0,\r\n    codigoAlmacen: '',\r\n    dirrecion: '',\r\n    nombreAlmacen: ''\r\n};\r\nexport const initialProductoAlmacen = {\r\n    productomaestroid: 0,\r\n    productoid: 0,\r\n    nombre: '',\r\n    codigoProducto: '',\r\n    nombreProducto: '',\r\n    categoriaid: 0,\r\n    nombrecategoria: ''\r\n}\r\nexport const initialLisProductoAlmacen = {\r\n    producto: initialProductoAlmacen,\r\n    productoAlmacen: []\r\n};\r\n\r\nexport const initialDetalleAlmacen = {\r\n    detallealmacenid:0,\r\n    serie: '',\r\n    fecharegistro: '',\r\n    estadoVendido: 0,\r\n    almacen: initialAlmacen\r\n};\r\nexport const initialStateStockProducto={\r\n    almacenid:0,\r\n    codigoAlmacen:'',\r\n    nombreAlmacen:'',\r\n    nombreProducto:'',\r\n    productoid:0\r\n}\r\n","import { Add } from \"@mui/icons-material\";\r\nimport { Box, Button, IconButton, styled } from \"@mui/material\";\r\nimport FlexBox from \"components/flexbox/FlexBox\";\r\nimport IconWrapper from \"components/IconWrapper\";\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport InventoryIcon from '@mui/icons-material/Inventory';\r\nimport { H5 } from \"components/Typography\";\r\nimport { Fragment, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport StoreMallDirectoryIcon from '@mui/icons-material/StoreMallDirectory';\r\n\r\nimport Paper from '@mui/material/Paper';\r\nimport {\r\n  RowDetailState, PagingState,\r\n  IntegratedSorting,\r\n  SortingState,\r\n  IntegratedPaging,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering\r\n} from '@devexpress/dx-react-grid';\r\nimport {\r\n  Grid,\r\n  Table,\r\n  TableHeaderRow,\r\n  TableRowDetail,\r\n  PagingPanel,\r\n  Toolbar,\r\n  SearchPanel\r\n\r\n} from '@devexpress/dx-react-grid-material-ui';\r\nimport { UseAlmacen } from \"../hooks/useAlmacenes\";\r\nimport Edit from \"icons/Edit\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { initialAlmacen } from \"../utils/almacen\";\r\nimport ModalAlmacen from \"./components/modal-almacen/modal-almacen\";\r\n\r\nexport const HeadingWrapper = styled(FlexBox)(({\r\n  theme\r\n}) => ({\r\n  marginBottom: 20,\r\n  flexWrap: \"wrap\",\r\n  [theme.breakpoints.down(530)]: {\r\n    \"& .MuiButton-root\": {\r\n      width: \"100%\"\r\n    },\r\n    \"& .MuiInputBase-root\": {\r\n      maxWidth: \"100%\",\r\n      marginBottom: 15\r\n    }\r\n  }\r\n}));\r\n\r\nconst AlmacenesList = () => {\r\n  const {\r\n    t\r\n  } = useTranslation();\r\n  const [openModalAlmacen, setOpenModalAlmacen] = useState(false);\r\n  const [openModalDelete, setOpenModalDelete] = useState(false)\r\n  const [btnCreate, setBtnCreate] = useState(false);\r\n  const [almacen, setAlmacen] = useState(initialAlmacen);\r\n  const [editar, setEditar] = useState(false)\r\n  const { onList, onStore, onCreate, onUpdate, onEditar, onDelete } = UseAlmacen();\r\n\r\n  const [tableColumnExtensions] = useState([\r\n    { columnName: 'nombreAlmacen', width: 200, wordWrapEnabled: true, align: 'left' },\r\n    { columnName: 'codigoAlmacen', width: 180, wordWrapEnabled: true, align: 'left' },\r\n    { columnName: 'dirrecion', wordWrapEnabled: true, align: 'left' },\r\n    { columnName: 'id', width: 150, wordWrapEnabled: true, align: 'left' },\r\n  ]);\r\n  const [columns] = useState([\r\n    { name: 'nombreAlmacen', title: 'Nombre' },\r\n    { name: 'codigoAlmacen', title: 'Codigo' },\r\n    { name: 'dirrecion', title: 'Dirrecion' },\r\n    { name: 'id', title: 'Acciones' },\r\n  ]);\r\n  const [rows, setRow] = useState([]);\r\n\r\n  const [currencyColumns] = useState(['id']);\r\n  const CurrencyFormatter = ({ value, row }) => {\r\n    return (\r\n      <Fragment>\r\n        <Link to={`/dashboard/almacen/${row.id}`}>\r\n          <IconButton >\r\n            <InventoryIcon sx={{\r\n              fontSize: 18,\r\n              color: \"text.disabled\"\r\n            }} />\r\n          </IconButton>\r\n        </Link>\r\n        <IconButton onClick={() => { handlerEditar(row) }}>\r\n          <Edit sx={{\r\n            fontSize: 18,\r\n            color: \"text.disabled\"\r\n          }} />\r\n        </IconButton>\r\n        <IconButton onClick={() => { handlerDelete(row) }}>\r\n          <DeleteIcon sx={{\r\n            fontSize: 18,\r\n            color: \"text.disabled\"\r\n          }} />\r\n        </IconButton>\r\n      </Fragment>\r\n    )\r\n  };\r\n\r\n  const CurrencyTypeProvider = props => (\r\n    <DataTypeProvider\r\n      formatterComponent={CurrencyFormatter}\r\n      {...props}\r\n    />\r\n  );\r\n\r\n  /*EVENTO DE DE LISTA */\r\n  const inizializando = async () => {\r\n    const { lista } = await onList();\r\n    setRow(lista)\r\n  }\r\n  const handlerCreate = async () => {\r\n    const { create, status } = await onCreate();\r\n    if (status) {\r\n      setAlmacen(create)\r\n      setOpenModalAlmacen(true)\r\n    }\r\n  }\r\n  const handlerEditar = async (data) => {\r\n    setEditar(true);\r\n    setAlmacen(data);\r\n    setOpenModalAlmacen(true)\r\n  }\r\n  const handlerSubmit = async (values) => {\r\n    if (editar) {\r\n      const { update, status } = await onUpdate(values);\r\n      if (status) {\r\n        setEditar(false);\r\n        setOpenModalAlmacen(false);\r\n        inizializando()\r\n      }\r\n    } else {\r\n      const { store, status } = await onStore(values);\r\n      if (status) {\r\n        setOpenModalAlmacen(false);\r\n        inizializando()\r\n      }\r\n    }\r\n  }\r\n  const handlerDelete = (row) => {\r\n    setAlmacen(row)\r\n    setOpenModalDelete(true)\r\n  }\r\n  const onDeleteAlmacen = async (data) => {\r\n    const { status } = await onDelete(data.id)\r\n    if (status) {\r\n      setOpenModalDelete(false);\r\n      inizializando()\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    inizializando()\r\n  }, [])\r\n\r\n  return (\r\n    <Box pt={2} pb={4}>\r\n      <HeadingWrapper justifyContent=\"space-between\" alignItems=\"center\">\r\n        <FlexBox gap={0.5} alignItems=\"center\">\r\n          <IconWrapper>\r\n            <StoreMallDirectoryIcon sx={{\r\n              color: \"primary.main\"\r\n            }} />\r\n          </IconWrapper>\r\n          <H5>Almacenes</H5>\r\n        </FlexBox>\r\n        <Button\r\n          variant=\"contained\"\r\n          endIcon={<Add />}\r\n          onClick={handlerCreate}\r\n          disabled={btnCreate}\r\n        >\r\n          {t(\"Añadir Almacen\")}\r\n        </Button>\r\n      </HeadingWrapper>\r\n      <Paper>\r\n        <Grid\r\n          rows={rows}\r\n          columns={columns}\r\n        >\r\n\r\n          {/* data format */}\r\n          <CurrencyTypeProvider\r\n            for={currencyColumns}\r\n          />\r\n          {/* sort columns*/}\r\n          <SortingState\r\n            defaultSorting={[{ columnName: 'city', direction: 'asc' }]}\r\n          />\r\n          <IntegratedSorting />\r\n          {/* paggin */}\r\n          <PagingState\r\n            defaultCurrentPage={0}\r\n            pageSize={5}\r\n          />\r\n          <IntegratedPaging />\r\n          <PagingPanel />\r\n          {/* buscador */}\r\n          <SearchState defaultValue=\"\" />\r\n          <IntegratedFiltering />\r\n          <Toolbar />\r\n          <SearchPanel />\r\n          {/* table */}\r\n          <Table columnExtensions={tableColumnExtensions} />\r\n          <TableHeaderRow showSortingControls />\r\n        </Grid>\r\n      </Paper>\r\n      {/* <ModalAlmacen\r\n        data={}\r\n        editProduct={}\r\n        onClose={}\r\n        onSubmit={}\r\n        open={}\r\n\r\n      ></ModalAlmacen> */}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AlmacenesList;\r\n","import { Add } from \"@mui/icons-material\";\r\nimport { Button, Grid, IconButton, styled, useMediaQuery } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport AppModal from \"components/AppModal\";\r\nimport FlexBox from \"components/flexbox/FlexBox\";\r\nimport FlexRowAlign from \"components/flexbox/FlexRowAlign\";\r\nimport AppTextField from \"components/input-fields/AppTextField\";\r\nimport Scrollbar from \"components/ScrollBar\";\r\nimport { H2, H6, Small } from \"components/Typography\";\r\nimport { useFormik } from \"formik\";\r\nimport { useEffect } from \"react\";\r\nimport * as Yup from \"yup\"; // component props interface\r\n\r\n// styled components\r\nconst StyledAppModal = styled(AppModal)(({\r\n    theme\r\n}) => ({\r\n    maxWidth: 700,\r\n    minWidth: 300,\r\n    outline: \"none\",\r\n    padding: \"1.5rem\"\r\n}));\r\nconst ImageDeleteWrapper = styled(FlexRowAlign)(({\r\n    theme\r\n}) => ({\r\n    top: 5,\r\n    right: 5,\r\n    width: 25,\r\n    height: 25,\r\n    borderRadius: \"50%\",\r\n    position: \"absolute\",\r\n    backgroundColor: theme.palette.error.main\r\n}));\r\nconst ImageUploadWrapper = styled(FlexRowAlign)(({\r\n    theme\r\n}) => ({\r\n    minHeight: 140,\r\n    cursor: \"pointer\",\r\n    borderRadius: \"8px\",\r\n    backgroundColor: theme.palette.grey[200]\r\n}));\r\n\r\nconst ModalAlmacen = ({\r\n    open,\r\n    data,\r\n    onClose,\r\n    editProduct,\r\n    onSubmit\r\n}) => {\r\n    const downXl = useMediaQuery(theme => theme.breakpoints.down(\"xl\"));\r\n    const {\r\n        resetForm,\r\n        setValues,\r\n        values,\r\n        errors,\r\n        handleChange,\r\n        handleSubmit,\r\n        touched\r\n    } = useFormik({\r\n        initialValues: data,\r\n        validationSchema: Yup.object().shape({\r\n            id: Yup.number(),\r\n            codigoAlmacen: Yup.string().required(\"Codigo es requerido!\"),\r\n            dirrecion: Yup.string().required(\"Direccion es requerido!\"),\r\n            nombreAlmacen: Yup.string().required(\"Nombre es requerido!\")\r\n        }),\r\n        onSubmit: values => {\r\n            onSubmit(values)\r\n        }\r\n    });\r\n    useEffect(() => {\r\n        resetForm()\r\n        setValues(data)\r\n    }, [open])\r\n\r\n    return <StyledAppModal open={open} handleClose={onClose}>\r\n        <H2 marginBottom={2}>\r\n            {editProduct && data ? \"Editar Almacen\" : \"Añadir Almacen\"}\r\n        </H2>\r\n        <form onSubmit={handleSubmit}>\r\n            <Scrollbar style={{\r\n                maxHeight: downXl ? 500 : \"auto\"\r\n            }}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item sm={6} xs={12}>\r\n                        <H6 mb={1}>Codigo</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"codigoAlmacen\"\r\n                            placeholder=\"Codigo\"\r\n                            value={values.codigoAlmacen}\r\n                            onChange={handleChange}\r\n                            error={Boolean(touched.codigoAlmacen && errors.codigoAlmacen)}\r\n                            helperText={touched.codigoAlmacen && errors.codigoAlmacen}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item sm={6} xs={12}>\r\n                        <H6 mb={1}>Nombre</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"nombreAlmacen\"\r\n                            placeholder=\"Nombre\"\r\n                            value={values.nombreAlmacen}\r\n                            onChange={handleChange}\r\n                            error={Boolean(touched.nombreAlmacen && errors.nombreAlmacen)}\r\n                            helperText={touched.nombreAlmacen && errors.nombreAlmacen}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <H6 mb={1}>Dirrecion</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            multiline\r\n                            rows={3}\r\n                            name=\"dirrecion\"\r\n                            placeholder=\"Direccion\"\r\n                            value={values.dirrecion}\r\n                            onChange={handleChange}\r\n                            error={Boolean(touched.dirrecion && errors.dirrecion)}\r\n                            helperText={touched.dirrecion && errors.dirrecion}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </Scrollbar>\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <FlexBox justifyContent=\"flex-end\" gap={2} marginTop={2}>\r\n                        <Button\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            onClick={onClose}\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n                        <Button\r\n                            fullWidth\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                    </FlexBox>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n    </StyledAppModal>;\r\n};\r\nexport default ModalAlmacen;","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');"],"sourceRoot":""}